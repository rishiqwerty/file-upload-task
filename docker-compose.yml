services:
  web:
    build:
      context: .
      dockerfile: api.DockerFile
    command: >
      bash -c "sleep 10 && alembic upgrade head &&
               uvicorn app.main:app --host 0.0.0.0 --port 8088 --reload"

    ports:
      - "8088:8088"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file: .env
    networks:
      - backend

  celery_worker:
    build:
      context: .
      dockerfile: worker.DockerFile
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
      - libreoffice
    env_file: .env
    networks:
      - backend
  celery_worker_zip:
    build:
      context: .
      dockerfile: worker.DockerFile
    command: celery -A app.celery.celery_app worker -Q zip_queue -c 2 -l info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file: .env
    networks:
      - backend

  celery_worker_file_upload:
    build:
      context: .
      dockerfile: worker.DockerFile
    command: celery -A app.celery.celery_app worker -Q file_conversion_queue -c 2 -l info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file: .env
    networks:
      - backend

  redis:
    image: redis:7
    networks:
      - backend
  db:
    image: postgres:17
    container_name: fileupload_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: docxconvert
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    
  libreoffice:
    image: lscr.io/linuxserver/libreoffice
    volumes:
      - ./file_upload:/app/file_upload
    entrypoint: sleep infinity
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
